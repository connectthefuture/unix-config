execute pathogen#infect()
filetype off
syntax on
filetype plugin indent on
set sessionoptions-=options

" vim not vi
set nocompatible

filetype plugin indent on    " required

syntax on
set number

" Auto indent
set ai
" Smart indent
set si

" Treats tabs like buffers ... questionable
tab sball

" Allow backspacing over autoindent, line breaks and start of insert action
set backspace=indent,eol,start

" This shows what you are typing as a command. 
set showcmd

" Use visual bell instead of beeping when doing something wrong
set visualbell

" Show matching brackets when text indicator is over them
set showmatch 

" How many tenths of a second to blink when matching brackets
set mat=1

" And reset the terminal code for the visual bell. If visualbell is set, and
" this line is also included, vim will neither flash nor beep. If visualbell
" is unset, this does nothing.
set t_vb=

" Visualize tabs
"syntax match Tab /\t/
hi Tab gui=underline guifg=blue ctermbg=blue

" Use spaces instead of tabs
set expandtab

" Be smart when using tabs ;)
set smarttab

" tab == 4 spaces
set shiftwidth=4
set softtabstop=4
set tabstop=4

" default character width 100
set tw=100
set colorcolumn=100
set cursorline
set ruler

" Hide the mouse pointer while typing
set mousehide

" Make the command-line completion better
set wildmenu

" Zee greatest shell
set shell=zsh

" TODO: the remaining language specific stuff should all be in submodules of plugin forks
" C
autocmd BufRead,BufNewFile *.c,*.h set tw=80 colorcolumn=80 cindent
" makefiles need tabs 
autocmd FileType make setlocal noexpandtab
" MASM
autocmd BufRead,BufNewFile *.asm set ft=masm

" default goey settings
color molokai
set guifont=Consolas:h16

" With a map leader it's possible to do extra key combinations
" like <leader>w saves the current file
let mapleader = ","
let g:mapleader = ","

" Pressing ,ss will toggle and untoggle spell checking
map <leader>ss :setlocal spell!<cr>

" Nerd tree
 autocmd StdinReadPre * let s:std_in=1
 autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

" Toggle tree with C-n
map <C-n> :NERDTreeToggle<CR>
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
